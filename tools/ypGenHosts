#!/usr/bin/perl -Tw
#
# ypGetHosts
#
# Automatically collect hosts data from ypcat hosts and generate the right
# stuff. This is a transition tool. Be sure to check the data generated by
# this script. YMMV.
#
# $Id: ypGenHosts,v 1.2 1998/09/04 04:36:38 jauderho Exp jauderho $
# (C) Copyright 1998 Jauder Ho <jauderho@carumba.com>
#
# 090398 jauderho [created. also sorts hosts table in numerical IP order]
#

use Socket;

my $domain = "transmeta.com";
my $dnshome = "/var/named";
my $fileBuildLock = "$dnshome/locks/ypGetHosts.lock";
my $fileHosts= "$dnshome/etc/hosts";
my %seen;
my %hosts;

$ENV{'PATH'} = "/bin:/usr/bin:/usr/sbin:/usr/local/bin:${dnshome}/bin";

die "ERROR: $fileHosts is currently being generated. If you are sure that\n       this is not the case, then remove $fileBuildLock\n" if (-f "$fileBuildLock");

`touch ${fileBuildLock}`;

# Check out, regen from YP and check in
`co -l -q ${fileHosts}`;

open(INPUT,"ypcat hosts |") or die "ERROR: Can't get hosts info!\n";
open(OUTPUT,">$fileHosts") or die "ERROR: Can't write to file $fileHosts\n";

select(OUTPUT);

# Modify data to my liking
while (<INPUT>) {
	my $ip;
	my $packedIP;
	my @array;

	next if $seen{$_}++;
	chomp();
	@array = split;

	$ip = shift @array;
	$packedIP = inet_aton $ip;

	$hosts{"$packedIP"} = "$ip\t";

	for (@array) {
		$hosts{"$packedIP"} .= "$_ " unless /$domain/;
	}
	
	$hosts{"$packedIP"} .= "\n";
	undef($packedIP);
}

# Sort data in a numerical IP order
for (sort keys %hosts) {
	print $hosts{$_};
}

close(OUTPUT);
close(INPUT);
	
`ci -f -q -m"Updated by ypGenHosts" -u ${fileHosts}`;

#  Remove lock file.
unlink(${fileBuildLock});

# The End
